// <auto-generated />
using System;
using DMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DMS.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220605153500_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DMS.Data.Models.EvictionOrderDb", b =>
                {
                    b.Property<int>("EvictionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eviction_order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("EvictionOrderId"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.HasKey("EvictionOrderId")
                        .HasName("pk_eviction_order");

                    b.HasIndex("ResidentId")
                        .HasDatabaseName("ix_eviction_order_resident_id");

                    b.ToTable("eviction_order", (string)null);

                    b.HasData(
                        new
                        {
                            EvictionOrderId = 1,
                            OrderDate = new DateTime(2022, 1, 16, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 7
                        },
                        new
                        {
                            EvictionOrderId = 2,
                            OrderDate = new DateTime(2022, 8, 2, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 4
                        },
                        new
                        {
                            EvictionOrderId = 3,
                            OrderDate = new DateTime(2022, 1, 20, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 10
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.PassportInformationDb", b =>
                {
                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<int>("PassportInformationId")
                        .HasColumnType("integer")
                        .HasColumnName("passport_information_id");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(70)")
                        .HasColumnName("address");

                    b.Property<int?>("DepartmentCode")
                        .HasColumnType("integer")
                        .HasColumnName("department_code");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issue_date");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("issued_by");

                    b.Property<string>("SeriesAndNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("series_and_number");

                    b.HasKey("ResidentId", "PassportInformationId")
                        .HasName("pk_passport_information");

                    b.HasIndex("ResidentId")
                        .IsUnique()
                        .HasDatabaseName("ix_passport_information_resident_id");

                    b.HasIndex("SeriesAndNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_passport_information_series_and_number");

                    b.ToTable("passport_information", (string)null);

                    b.HasData(
                        new
                        {
                            ResidentId = 1,
                            PassportInformationId = 1,
                            Address = "Россия, г. Йошкар-Ола, Радужная ул., д. 4 кв.58",
                            DepartmentCode = 930822,
                            IssueDate = new DateTime(2019, 8, 18, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделом внутренних дел России по г. Йошкар-Ола",
                            SeriesAndNumber = "4943101489"
                        },
                        new
                        {
                            ResidentId = 2,
                            PassportInformationId = 2,
                            Address = "Россия, г. Екатеринбург, Центральный пер., д. 18 кв.101",
                            DepartmentCode = 830605,
                            IssueDate = new DateTime(2019, 11, 24, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России по г. Екатеринбург",
                            SeriesAndNumber = "4702117803"
                        },
                        new
                        {
                            ResidentId = 3,
                            PassportInformationId = 3,
                            Address = "Россия, г. Новошахтинск, Пролетарская ул., д. 18 кв.32",
                            DepartmentCode = 670210,
                            IssueDate = new DateTime(2016, 10, 5, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России в г. Новошахтинск",
                            SeriesAndNumber = "4006644387"
                        },
                        new
                        {
                            ResidentId = 4,
                            PassportInformationId = 4,
                            Address = "Россия, г. Домодедово, Солнечный пер., д. 8 кв.4",
                            DepartmentCode = 660389,
                            IssueDate = new DateTime(2018, 12, 1, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России по г. Домодедово",
                            SeriesAndNumber = "4906472737"
                        },
                        new
                        {
                            ResidentId = 5,
                            PassportInformationId = 5,
                            Address = "Россия, г. Балаково, Совхозная ул., д. 8 кв.144",
                            DepartmentCode = 920691,
                            IssueDate = new DateTime(2016, 3, 16, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России в г. Балаково",
                            SeriesAndNumber = "4102385088"
                        },
                        new
                        {
                            ResidentId = 6,
                            PassportInformationId = 6,
                            Address = "Россия, г. Томск, Колхозный пер., д. 23 кв.218",
                            DepartmentCode = 590726,
                            IssueDate = new DateTime(2018, 7, 26, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделом внутренних дел России по г. Томск",
                            SeriesAndNumber = "4605443539"
                        },
                        new
                        {
                            ResidentId = 7,
                            PassportInformationId = 7,
                            Address = "Россия, г. Энгельс, ул. Ленина, д. 13 кв.269",
                            DepartmentCode = 670697,
                            IssueDate = new DateTime(2018, 12, 31, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "ОУФМС России по г. Энгельс",
                            SeriesAndNumber = "4404497341"
                        },
                        new
                        {
                            ResidentId = 8,
                            PassportInformationId = 8,
                            Address = "Россия, г. Благовещенск, Цветочный пер., д. 54 кв.12",
                            DepartmentCode = 640958,
                            IssueDate = new DateTime(2018, 11, 15, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Управление внутренних дел по г. Благовещенск",
                            SeriesAndNumber = "4205516390"
                        },
                        new
                        {
                            ResidentId = 9,
                            PassportInformationId = 9,
                            Address = "Россия, г. Балаково, ул. Женитьбы, д. 21 кв.14",
                            DepartmentCode = 230962,
                            IssueDate = new DateTime(2017, 8, 5, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России в г. Балаково",
                            SeriesAndNumber = "4703955170"
                        },
                        new
                        {
                            ResidentId = 10,
                            PassportInformationId = 10,
                            Address = "Россия, г. Владивосток, ул. Красная, д. 21 кв.15",
                            DepartmentCode = 920142,
                            IssueDate = new DateTime(2018, 1, 12, 21, 0, 0, 0, DateTimeKind.Utc),
                            IssuedBy = "Отделением УФМС России по г. Владивосток",
                            SeriesAndNumber = "4906779333"
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.RatingChangeCategoryDb", b =>
                {
                    b.Property<int>("RatingChangeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("RatingChangeCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("RatingChangeCategoryId")
                        .HasName("pk_rating_change_category");

                    b.ToTable("rating_change_category", (string)null);

                    b.HasData(
                        new
                        {
                            RatingChangeCategoryId = 1,
                            Name = "Докладная"
                        },
                        new
                        {
                            RatingChangeCategoryId = 2,
                            Name = "Поощрение"
                        },
                        new
                        {
                            RatingChangeCategoryId = 3,
                            Name = "Выговор"
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.RatingOperationDb", b =>
                {
                    b.Property<int>("RatingOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rating_operation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RatingOperationId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("ChangeValue")
                        .HasColumnType("integer")
                        .HasColumnName("change_value");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.HasKey("RatingOperationId")
                        .HasName("pk_rating_operation");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_rating_operation_category_id");

                    b.HasIndex("ResidentId")
                        .HasDatabaseName("ix_rating_operation_resident_id");

                    b.ToTable("rating_operation", (string)null);

                    b.HasData(
                        new
                        {
                            RatingOperationId = 1,
                            CategoryId = 1,
                            ChangeValue = -3,
                            OrderDate = new DateTime(2022, 5, 11, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 1
                        },
                        new
                        {
                            RatingOperationId = 2,
                            CategoryId = 2,
                            ChangeValue = 1,
                            OrderDate = new DateTime(2022, 4, 10, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 2
                        },
                        new
                        {
                            RatingOperationId = 3,
                            CategoryId = 2,
                            ChangeValue = 2,
                            OrderDate = new DateTime(2022, 4, 30, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 3
                        },
                        new
                        {
                            RatingOperationId = 4,
                            CategoryId = 2,
                            ChangeValue = 1,
                            OrderDate = new DateTime(2022, 6, 1, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 4
                        },
                        new
                        {
                            RatingOperationId = 5,
                            CategoryId = 3,
                            ChangeValue = -1,
                            OrderDate = new DateTime(2022, 5, 20, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 5
                        },
                        new
                        {
                            RatingOperationId = 6,
                            CategoryId = 2,
                            ChangeValue = 3,
                            OrderDate = new DateTime(2022, 3, 4, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 6
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.ResidentDb", b =>
                {
                    b.Property<int>("ResidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ResidentId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<int?>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("first_name");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<bool>("IsCommercial")
                        .HasColumnType("bool")
                        .HasColumnName("is_commercial");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Patronymic")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("patronymic");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    b.Property<string>("Tin")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("tin");

                    b.HasKey("ResidentId")
                        .HasName("pk_resident");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_resident_room_number");

                    b.HasIndex("Tin")
                        .IsUnique()
                        .HasDatabaseName("ix_resident_tin");

                    b.ToTable("resident", (string)null);

                    b.HasData(
                        new
                        {
                            ResidentId = 1,
                            BirthDate = new DateTime(2003, 4, 20, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Даниил",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Морозов",
                            Patronymic = "Артёмович",
                            Tin = "737277807092"
                        },
                        new
                        {
                            ResidentId = 2,
                            BirthDate = new DateTime(2005, 12, 1, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 2,
                            FirstName = "Платон",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Дубов",
                            Patronymic = "Александрович",
                            Tin = "276204981825"
                        },
                        new
                        {
                            ResidentId = 3,
                            BirthDate = new DateTime(2004, 4, 2, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 1,
                            FirstName = "Артём",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Галкин",
                            Patronymic = "Константинович",
                            RoomId = 301,
                            Tin = "545375584419"
                        },
                        new
                        {
                            ResidentId = 4,
                            BirthDate = new DateTime(2004, 4, 18, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 3,
                            FirstName = "Владимир",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Скворцов",
                            Patronymic = "Максимович",
                            RoomId = 302,
                            Tin = "541729308186"
                        },
                        new
                        {
                            ResidentId = 5,
                            BirthDate = new DateTime(2002, 6, 22, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Мирон",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Латышев",
                            Patronymic = "Глебович",
                            RoomId = 302,
                            Tin = "498392680283"
                        },
                        new
                        {
                            ResidentId = 6,
                            BirthDate = new DateTime(2005, 6, 2, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 1,
                            FirstName = "Александр",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Маркин",
                            Patronymic = "Тимурович",
                            RoomId = 302,
                            Tin = "252251775675"
                        },
                        new
                        {
                            ResidentId = 7,
                            BirthDate = new DateTime(2004, 5, 21, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Андрей",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Майоров",
                            Patronymic = "Александрович",
                            RoomId = 303,
                            Tin = "316152736997"
                        },
                        new
                        {
                            ResidentId = 8,
                            BirthDate = new DateTime(2004, 4, 21, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Андрей",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Матвеев",
                            Patronymic = "Максимович",
                            RoomId = 303,
                            Tin = "728273836756"
                        },
                        new
                        {
                            ResidentId = 9,
                            BirthDate = new DateTime(2002, 11, 15, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 1,
                            FirstName = "Денис",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Авдеев",
                            Patronymic = "Евгеньевич",
                            RoomId = 303,
                            Tin = "715730062207"
                        },
                        new
                        {
                            ResidentId = 10,
                            BirthDate = new DateTime(2002, 11, 10, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 1,
                            FirstName = "Кирилл",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Богданов",
                            Patronymic = "Кириллович",
                            RoomId = 304,
                            Tin = "642845725453"
                        },
                        new
                        {
                            ResidentId = 11,
                            BirthDate = new DateTime(2003, 11, 13, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 2,
                            FirstName = "Александр",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Сахаров",
                            Patronymic = "Егорович",
                            RoomId = 304,
                            Tin = "359284956944"
                        },
                        new
                        {
                            ResidentId = 12,
                            BirthDate = new DateTime(2005, 1, 9, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 2,
                            FirstName = "Роман",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Иванов",
                            Patronymic = "Романович",
                            RoomId = 304,
                            Tin = "799582532172"
                        },
                        new
                        {
                            ResidentId = 13,
                            BirthDate = new DateTime(2006, 12, 29, 21, 0, 0, 0, DateTimeKind.Utc),
                            Course = 3,
                            FirstName = "Кирилл",
                            Gender = 'M',
                            IsCommercial = true,
                            LastName = "Панов",
                            Patronymic = "Романович",
                            RoomId = 305,
                            Tin = "108102025148"
                        },
                        new
                        {
                            ResidentId = 14,
                            BirthDate = new DateTime(2002, 10, 5, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Руслан",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Ершов",
                            Patronymic = "Иванович",
                            RoomId = 305,
                            Tin = "288734150714"
                        },
                        new
                        {
                            ResidentId = 15,
                            BirthDate = new DateTime(2005, 4, 18, 20, 0, 0, 0, DateTimeKind.Utc),
                            Course = 4,
                            FirstName = "Евгений",
                            Gender = 'M',
                            IsCommercial = false,
                            LastName = "Афанасьев",
                            Patronymic = "Максимович",
                            RoomId = 305,
                            Tin = "613391118617"
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.RoomDb", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<int>("FloorNumber")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("integer")
                        .HasColumnName("floor_number")
                        .HasComputedColumnSql("room_number / 100", true);

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.HasKey("RoomId")
                        .HasName("pk_room");

                    b.ToTable("room", (string)null);

                    b.HasData(
                        new
                        {
                            RoomId = 301,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 302,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 303,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 304,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 305,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 306,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        },
                        new
                        {
                            RoomId = 307,
                            Capacity = 3,
                            FloorNumber = 3,
                            Gender = 'M'
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.SettlementOrderDb", b =>
                {
                    b.Property<int>("SettlementOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("SettlementOrderId"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<string>("ParentsFullName")
                        .HasColumnType("varchar(110)")
                        .HasColumnName("parents_name");

                    b.Property<string>("ParentsPassportAddress")
                        .HasColumnType("varchar(70)")
                        .HasColumnName("parents_passport_address");

                    b.Property<int?>("ParentsPassportDepartmentCode")
                        .HasColumnType("integer")
                        .HasColumnName("parents_passport_department_code");

                    b.Property<DateTime?>("ParentsPassportIssueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("parents_passport_issue_date");

                    b.Property<string>("ParentsPassportIssuedBy")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("parents_passport_issued_by");

                    b.Property<string>("ParentsPassportSeriesNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("parents_passport_series_number");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    b.HasKey("SettlementOrderId")
                        .HasName("pk_settlement_order");

                    b.HasIndex("ResidentId")
                        .HasDatabaseName("ix_settlement_order_resident_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_settlement_order_room_number");

                    b.ToTable("settlement_order", (string)null);

                    b.HasData(
                        new
                        {
                            SettlementOrderId = 1,
                            OrderDate = new DateTime(21, 8, 28, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Беляков Даниил Андреевич",
                            ParentsPassportAddress = "Россия, г. Йошкар-Ола, Радужная ул., д. 4 кв.58",
                            ParentsPassportDepartmentCode = 930822,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России в г. Балаково",
                            ParentsPassportSeriesNumber = "4605443539",
                            ResidentId = 1,
                            RoomId = 301
                        },
                        new
                        {
                            SettlementOrderId = 2,
                            OrderDate = new DateTime(21, 8, 29, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Игнатова Анастасия Семёновна",
                            ParentsPassportAddress = "Россия, г. Екатеринбург, Центральный пер., д. 18 кв.101",
                            ParentsPassportDepartmentCode = 830605,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России по г. Владивосток",
                            ParentsPassportSeriesNumber = "4404497341",
                            ResidentId = 2,
                            RoomId = 301
                        },
                        new
                        {
                            SettlementOrderId = 3,
                            OrderDate = new DateTime(21, 8, 31, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Васильев Александр Захарович",
                            ParentsPassportAddress = "Россия, г. Новошахтинск, Пролетарская ул., д. 18 кв.32",
                            ParentsPassportDepartmentCode = 670210,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделом внутренних дел России по г. Йошкар-Ола",
                            ParentsPassportSeriesNumber = "4205516390",
                            ResidentId = 3,
                            RoomId = 301
                        },
                        new
                        {
                            SettlementOrderId = 4,
                            OrderDate = new DateTime(21, 8, 27, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Иванов Георгий Никитич",
                            ParentsPassportAddress = "Россия, г. Домодедово, Солнечный пер., д. 8 кв.4",
                            ParentsPassportDepartmentCode = 660389,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России по г. Екатеринбург",
                            ParentsPassportSeriesNumber = "4703955170",
                            ResidentId = 4,
                            RoomId = 302
                        },
                        new
                        {
                            SettlementOrderId = 5,
                            OrderDate = new DateTime(21, 8, 28, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Исаков Тимур Романович",
                            ParentsPassportAddress = "Россия, г. Балаково, Совхозная ул., д. 8 кв.144",
                            ParentsPassportDepartmentCode = 920691,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России в г. Новошахтинск",
                            ParentsPassportSeriesNumber = "4906779333",
                            ResidentId = 5,
                            RoomId = 302
                        },
                        new
                        {
                            SettlementOrderId = 6,
                            OrderDate = new DateTime(21, 8, 29, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Пахомова Виктория Ярославовна",
                            ParentsPassportAddress = "Россия, г. Томск, Колхозный пер., д. 23 кв.218",
                            ParentsPassportDepartmentCode = 590726,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России по г. Домодедово",
                            ParentsPassportSeriesNumber = "4504272308",
                            ResidentId = 6,
                            RoomId = 302
                        },
                        new
                        {
                            SettlementOrderId = 7,
                            OrderDate = new DateTime(21, 8, 29, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Исаева Анна Васильевна",
                            ParentsPassportAddress = "Россия, г. Энгельс, ул. Ленина, д. 13 кв.269",
                            ParentsPassportDepartmentCode = 670697,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделением УФМС России в г. Балаково",
                            ParentsPassportSeriesNumber = "4602684723",
                            ResidentId = 7,
                            RoomId = 303
                        },
                        new
                        {
                            SettlementOrderId = 8,
                            OrderDate = new DateTime(21, 8, 31, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Царева Эмилия Леонидовна",
                            ParentsPassportAddress = "Россия, г. Благовещенск, Цветочный пер., д. 54 кв.12",
                            ParentsPassportDepartmentCode = 640958,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Отделом внутренних дел России по г. Томск",
                            ParentsPassportSeriesNumber = "4604696743",
                            ResidentId = 8,
                            RoomId = 303
                        },
                        new
                        {
                            SettlementOrderId = 9,
                            OrderDate = new DateTime(21, 9, 1, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Золотарева Дарья Матвеевна",
                            ParentsPassportAddress = "Россия, г. Балаково, ул. Женитьбы, д. 21 кв.14",
                            ParentsPassportDepartmentCode = 230962,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "ОУФМС России по г. Энгельс",
                            ParentsPassportSeriesNumber = "4704095718",
                            ResidentId = 9,
                            RoomId = 303
                        },
                        new
                        {
                            SettlementOrderId = 10,
                            OrderDate = new DateTime(21, 8, 28, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsFullName = "Власова София Леонидовна",
                            ParentsPassportAddress = "Россия, г. Владивосток, ул. Красная, д. 21 кв.15",
                            ParentsPassportDepartmentCode = 920142,
                            ParentsPassportIssueDate = new DateTime(1987, 10, 3, 20, 0, 0, 0, DateTimeKind.Utc),
                            ParentsPassportIssuedBy = "Управление внутренних дел по г. Благовещенск",
                            ParentsPassportSeriesNumber = "4302520273",
                            ResidentId = 10,
                            RoomId = 304
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.TransactionDb", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transaction_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("operation_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<double>("Sum")
                        .HasColumnType("double precision")
                        .HasColumnName("sum");

                    b.HasKey("TransactionId")
                        .HasName("pk_transaction");

                    b.HasIndex("ResidentId")
                        .HasDatabaseName("ix_transaction_resident_id");

                    b.ToTable("transaction", (string)null);

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            OperationDate = new DateTime(2022, 9, 17, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 1,
                            Sum = 7931.1400000000003
                        },
                        new
                        {
                            TransactionId = 2,
                            OperationDate = new DateTime(2022, 9, 25, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 2,
                            Sum = 6255.4899999999998
                        },
                        new
                        {
                            TransactionId = 3,
                            OperationDate = new DateTime(2022, 8, 27, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 3,
                            Sum = 9617.5300000000007
                        },
                        new
                        {
                            TransactionId = 4,
                            OperationDate = new DateTime(2022, 8, 29, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 4,
                            Sum = 5058.3800000000001
                        },
                        new
                        {
                            TransactionId = 5,
                            OperationDate = new DateTime(2022, 8, 31, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 5,
                            Sum = 9588.4799999999996
                        },
                        new
                        {
                            TransactionId = 6,
                            OperationDate = new DateTime(2022, 8, 28, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 6,
                            Sum = 7287.0699999999997
                        },
                        new
                        {
                            TransactionId = 7,
                            OperationDate = new DateTime(2022, 5, 23, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 7,
                            Sum = 8917.2099999999991
                        },
                        new
                        {
                            TransactionId = 8,
                            OperationDate = new DateTime(2022, 4, 28, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 8,
                            Sum = 5403.7799999999997
                        },
                        new
                        {
                            TransactionId = 9,
                            OperationDate = new DateTime(2022, 3, 28, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 9,
                            Sum = 6124.7700000000004
                        },
                        new
                        {
                            TransactionId = 10,
                            OperationDate = new DateTime(2022, 2, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            ResidentId = 10,
                            Sum = 5108.79
                        });
                });

            modelBuilder.Entity("DMS.Data.Models.EvictionOrderDb", b =>
                {
                    b.HasOne("DMS.Data.Models.ResidentDb", "Resident")
                        .WithMany("EvictionOrders")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_eviction_order_resident_resident_id");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Data.Models.PassportInformationDb", b =>
                {
                    b.HasOne("DMS.Data.Models.ResidentDb", "Resident")
                        .WithOne("PassportInformation")
                        .HasForeignKey("DMS.Data.Models.PassportInformationDb", "ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_passport_information_resident_resident_id");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Data.Models.RatingOperationDb", b =>
                {
                    b.HasOne("DMS.Data.Models.RatingChangeCategoryDb", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rating_operation_rating_change_category_category_id");

                    b.HasOne("DMS.Data.Models.ResidentDb", "Resident")
                        .WithMany("RatingOperations")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rating_operation_resident_resident_id");

                    b.Navigation("Category");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Data.Models.ResidentDb", b =>
                {
                    b.HasOne("DMS.Data.Models.RoomDb", "Room")
                        .WithMany("Residents")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_resident_room_room_number");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DMS.Data.Models.SettlementOrderDb", b =>
                {
                    b.HasOne("DMS.Data.Models.ResidentDb", "Resident")
                        .WithMany("SettlementOrders")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_settlement_order_resident_resident_id");

                    b.HasOne("DMS.Data.Models.RoomDb", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_settlement_order_room_room_number");

                    b.Navigation("Resident");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DMS.Data.Models.TransactionDb", b =>
                {
                    b.HasOne("DMS.Data.Models.ResidentDb", "Resident")
                        .WithMany("Transactions")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_resident_resident_id");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Data.Models.ResidentDb", b =>
                {
                    b.Navigation("EvictionOrders");

                    b.Navigation("PassportInformation")
                        .IsRequired();

                    b.Navigation("RatingOperations");

                    b.Navigation("SettlementOrders");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DMS.Data.Models.RoomDb", b =>
                {
                    b.Navigation("Residents");
                });
#pragma warning restore 612, 618
        }
    }
}
