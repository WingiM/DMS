// <auto-generated />
using System;
using DMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DMS.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220517131135_DeleteAllData")]
    partial class DeleteAllData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DMS.Models.EvictionOrder", b =>
                {
                    b.Property<int>("EvictionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("EvictionOrderId"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.HasKey("EvictionOrderId");

                    b.HasIndex("ResidentId");

                    b.ToTable("eviction_order");
                });

            modelBuilder.Entity("DMS.Models.PassportInformation", b =>
                {
                    b.Property<int>("PassportInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("passport_information_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PassportInformationId"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(70)")
                        .HasColumnName("address");

                    b.Property<int?>("DepartmentCode")
                        .HasColumnType("integer")
                        .HasColumnName("department_code");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issue_date");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("issued_by");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<string>("SeriesAndNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("series_number");

                    b.HasKey("PassportInformationId");

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.HasIndex("SeriesAndNumber")
                        .IsUnique();

                    b.ToTable("passport_information");
                });

            modelBuilder.Entity("DMS.Models.RatingChangeCategory", b =>
                {
                    b.Property<int>("RatingChangeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("RatingChangeCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("RatingChangeCategoryId");

                    b.ToTable("rating_change_category");
                });

            modelBuilder.Entity("DMS.Models.RatingOperation", b =>
                {
                    b.Property<int>("RatingOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rating_operation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RatingOperationId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("ChangeValue")
                        .HasColumnType("integer")
                        .HasColumnName("change_value");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.HasKey("RatingOperationId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ResidentId");

                    b.ToTable("rating_operation");
                });

            modelBuilder.Entity("DMS.Models.Resident", b =>
                {
                    b.Property<int>("ResidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ResidentId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<int?>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("first_name");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<bool>("IsCommercial")
                        .HasColumnType("bool")
                        .HasColumnName("is_commercial");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Patronymic")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("patronymic");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    b.Property<string>("Tin")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("tin");

                    b.HasKey("ResidentId");

                    b.HasIndex("RoomId");

                    b.HasIndex("Tin")
                        .IsUnique();

                    b.ToTable("resident");
                });

            modelBuilder.Entity("DMS.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<int>("FloorNumber")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("integer")
                        .HasColumnName("floor_number")
                        .HasComputedColumnSql("room_number / 100", true);

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.HasKey("RoomId");

                    b.ToTable("room");
                });

            modelBuilder.Entity("DMS.Models.SettlementOrder", b =>
                {
                    b.Property<int>("SettlementOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("SettlementOrderId"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<string>("ParentsFullName")
                        .HasColumnType("varchar(110)")
                        .HasColumnName("parents_name");

                    b.Property<string>("ParentsPassportAddress")
                        .HasColumnType("varchar(70)")
                        .HasColumnName("parents_passport_address");

                    b.Property<int?>("ParentsPassportDepartmentCode")
                        .HasColumnType("integer")
                        .HasColumnName("parents_passport_department_code");

                    b.Property<DateTime?>("ParentsPassportIssueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("parents_passport_issue_date");

                    b.Property<string>("ParentsPassportIssuedBy")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("parents_passport_issued_by");

                    b.Property<string>("ParentsPassportSeriesNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("parents_passport_series_number");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_number");

                    b.HasKey("SettlementOrderId");

                    b.HasIndex("ResidentId");

                    b.HasIndex("RoomId");

                    b.ToTable("settlement_order");
                });

            modelBuilder.Entity("DMS.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transaction_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("operation_date");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("resident_id");

                    b.Property<double>("Sum")
                        .HasColumnType("double precision")
                        .HasColumnName("sum");

                    b.HasKey("TransactionId");

                    b.HasIndex("ResidentId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("DMS.Models.EvictionOrder", b =>
                {
                    b.HasOne("DMS.Models.Resident", "Resident")
                        .WithMany("EvictionOrders")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Models.PassportInformation", b =>
                {
                    b.HasOne("DMS.Models.Resident", "Resident")
                        .WithOne("PassportInformation")
                        .HasForeignKey("DMS.Models.PassportInformation", "ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Models.RatingOperation", b =>
                {
                    b.HasOne("DMS.Models.RatingChangeCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Models.Resident", "Resident")
                        .WithMany("RatingOperations")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Models.Resident", b =>
                {
                    b.HasOne("DMS.Models.Room", "Room")
                        .WithMany("Residents")
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DMS.Models.SettlementOrder", b =>
                {
                    b.HasOne("DMS.Models.Resident", "Resident")
                        .WithMany("SettlementOrders")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DMS.Models.Transaction", b =>
                {
                    b.HasOne("DMS.Models.Resident", "Resident")
                        .WithMany("Transactions")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("DMS.Models.Resident", b =>
                {
                    b.Navigation("EvictionOrders");

                    b.Navigation("PassportInformation");

                    b.Navigation("RatingOperations");

                    b.Navigation("SettlementOrders");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DMS.Models.Room", b =>
                {
                    b.Navigation("Residents");
                });
#pragma warning restore 612, 618
        }
    }
}
