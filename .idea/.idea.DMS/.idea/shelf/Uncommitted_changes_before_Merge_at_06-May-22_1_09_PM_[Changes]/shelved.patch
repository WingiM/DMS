Index: DMS/ClientApp/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport './custom.css'\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport RoomsBlock from \"./components/RoomsBlock\"\r\nimport InRoomResidents from \"./components/InRoomResidents\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\n\r\nclass App extends React.Component {\r\n    static displayName = App.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showRooms: false,\r\n            showInRoomResidents: false,\r\n            activeRoom: [],\r\n        }\r\n\r\n        this.showRoomsButtonClickHandler = this.showRoomsButtonClickHandler.bind(this);\r\n        this.openRoomButtonClickHandler = this.openRoomButtonClickHandler.bind(this);\r\n        this.closeRoomButtonClickHandler = this.closeRoomButtonClickHandler.bind(this);\r\n    }\r\n    \r\n    //handlers\r\n\r\n    showRoomsButtonClickHandler() {\r\n        this.setState({showRooms: true})\r\n    }\r\n\r\n    async openRoomButtonClickHandler(room) {\r\n        this.setState({showInRoomResidents: false})\r\n        \r\n        const data = await this.fetchRoom(room)\r\n        this.setState({activeRoom: data})\r\n        this.setState({showInRoomResidents: true})\r\n    }\r\n\r\n    closeRoomButtonClickHandler() {\r\n        this.setState({showInRoomResidents : false})\r\n    }\r\n    \r\n    // fetch functions\r\n    \r\n    async fetchRoom(room) {\r\n        const requestUrl = \"api/rooms/\" + room\r\n        const response = await fetch(requestUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\" : localStorage.getItem(\"token\")\r\n            }\r\n        })\r\n        \r\n        const data = await response.json()\r\n        return data.value\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Routes>\r\n                <Route path=\"/login\" element={<Login/>}/>\r\n                <Route path=\"/\" element={\r\n                    <Routes>\r\n                        <Route path=\"/login\" element={<Login/>}/>\r\n                        <Route path=\"/\" element={\r\n                            <React.StrictMode>\r\n                                <Sidebar\r\n                                    showRooms={this.showRoomsButtonClickHandler}\r\n                                />\r\n                                <RoomsBlock\r\n                                    show={this.state.showRooms}\r\n                                    openRoom = {this.openRoomButtonClickHandler}\r\n                                />\r\n                                <InRoomResidents\r\n                                    show={this.state.showInRoomResidents}\r\n                                    closeButtonClickHandler = {this.closeRoomButtonClickHandler}\r\n                                    room={this.state.activeRoom}\r\n                                />\r\n                            </React.StrictMode>\r\n                        }/>\r\n                        \r\n                    </Routes>\r\n                }/>\r\n                <Route path=\"*\" element={<Navigate to=\"/\"/>}/>\r\n            </Routes>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/App.js b/DMS/ClientApp/src/App.js
--- a/DMS/ClientApp/src/App.js	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/App.js	(date 1651776499453)
@@ -5,6 +5,7 @@
 import InRoomResidents from "./components/InRoomResidents";
 import {Navigate, Route, Routes} from "react-router-dom";
 import Login from "./components/Login";
+import Residents from "./components/Residents";
 
 class App extends React.Component {
     static displayName = App.name;
@@ -15,23 +16,31 @@
         this.state = {
             showRooms: false,
             showInRoomResidents: false,
+            showResidents: false,
             activeRoom: [],
         }
 
         this.showRoomsButtonClickHandler = this.showRoomsButtonClickHandler.bind(this);
         this.openRoomButtonClickHandler = this.openRoomButtonClickHandler.bind(this);
         this.closeRoomButtonClickHandler = this.closeRoomButtonClickHandler.bind(this);
+        this.showResidentsBlockButtonClickHandler = this.showResidentsBlockButtonClickHandler.bind(this);
     }
     
     //handlers
 
+    showResidentsBlockButtonClickHandler() {
+        this.setState({showRooms: false})
+        this.setState({showInRoomResidents: false})
+        this.setState({showResidents: true})
+    }
+
     showRoomsButtonClickHandler() {
+        this.setState({showResidents: false})
         this.setState({showRooms: true})
     }
 
     async openRoomButtonClickHandler(room) {
         this.setState({showInRoomResidents: false})
-        
         const data = await this.fetchRoom(room)
         this.setState({activeRoom: data})
         this.setState({showInRoomResidents: true})
@@ -53,22 +62,37 @@
         })
         
         const data = await response.json()
-        return data.value
+        return data.Value
+    }
+
+    async checkTokenLifeTime() {
+        const data = await fetch("/api/rooms/floors", {
+            method: "GET",
+            headers: {
+                "Authorization": localStorage.getItem("token")
+            }
+        });
+
+        if (data.status !== 200) {
+            return <Navigate to="/login"/>
+        }
     }
 
     render() {
-        
+        this.checkTokenLifeTime()
         return (
             <Routes>
                 <Route path="/login" element={<Login/>}/>
-                <Route path="/" element={
+                <Route path="*" element={
                     <Routes>
                         <Route path="/login" element={<Login/>}/>
                         <Route path="/" element={
                             <React.StrictMode>
                                 <Sidebar
                                     showRooms={this.showRoomsButtonClickHandler}
+                                    showResidents={this.showResidentsBlockButtonClickHandler}
                                 />
+                                <Residents show={this.state.showResidents}/>
                                 <RoomsBlock
                                     show={this.state.showRooms}
                                     openRoom = {this.openRoomButtonClickHandler}
@@ -83,7 +107,6 @@
                         
                     </Routes>
                 }/>
-                <Route path="*" element={<Navigate to="/"/>}/>
             </Routes>
         )
     }
Index: DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import \"./InRoomResidents.css\";\r\nimport React from \"react\";\r\nimport addButtonImg from './img/addResidentButton.svg'\r\nimport closeButtonImg from './img/cross.svg'\r\nimport Resident from \"../Resident/Resident\";\r\n\r\nfunction template() {\r\n    return (\r\n        this.props.show ?\r\n        <div className=\"in-room-residents\">\r\n            <button onClick={this.props.closeButtonClickHandler} className=\"close-residents-button\"><img alt=\"close\" src={closeButtonImg}/></button>\r\n            <div className=\"rooms-header\">ПРОЖИВАЮЩИЕ {this.props.room[\"roomId\"]}</div>\r\n            <div className=\"in-room-residents-scroll-zone\">\r\n                {\r\n                    this.props.room[\"residents\"] !== undefined ?\r\n                    this.props.room[\"residents\"].map(resident => \r\n                    <Resident key={resident} \r\n                              id={resident[\"residentId\"]} \r\n                              lastname={resident[\"lastName\"]} \r\n                              firstName={resident[\"firstName\"]}\r\n                              patronymic={resident[\"patronymic\"]}\r\n                              gender={resident[\"gender\"]}\r\n                              birthDate={resident[\"birthDate\"]}\r\n                              passportInformation={resident[\"passportInformation\"]}\r\n                              tin={resident[\"tin\"]}\r\n                              rating={resident[\"rating\"]}\r\n                              debt={resident[\"debt\"]}\r\n                              reports={resident[\"reports\"]}\r\n                    />) : ''\r\n                }\r\n                <button className=\"add-resident-button\"><img alt=\"plus\" src={addButtonImg}/></button>\r\n            </div>\r\n\r\n        </div> : ''\r\n    );\r\n}\r\n\r\nexport default template;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx b/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx
--- a/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx	(date 1651766590249)
@@ -9,23 +9,23 @@
         this.props.show ?
         <div className="in-room-residents">
             <button onClick={this.props.closeButtonClickHandler} className="close-residents-button"><img alt="close" src={closeButtonImg}/></button>
-            <div className="rooms-header">ПРОЖИВАЮЩИЕ {this.props.room["roomId"]}</div>
+            <div className="rooms-header">ПРОЖИВАЮЩИЕ {this.props.room["RoomId"]}</div>
             <div className="in-room-residents-scroll-zone">
                 {
-                    this.props.room["residents"] !== undefined ?
-                    this.props.room["residents"].map(resident => 
+                    this.props.room["Residents"] !== undefined ?
+                    this.props.room["Residents"].map(resident => 
                     <Resident key={resident} 
-                              id={resident["residentId"]} 
-                              lastname={resident["lastName"]} 
-                              firstName={resident["firstName"]}
-                              patronymic={resident["patronymic"]}
-                              gender={resident["gender"]}
-                              birthDate={resident["birthDate"]}
-                              passportInformation={resident["passportInformation"]}
-                              tin={resident["tin"]}
-                              rating={resident["rating"]}
-                              debt={resident["debt"]}
-                              reports={resident["reports"]}
+                              id={resident["ResidentId"]} 
+                              lastname={resident["LastName"]} 
+                              firstName={resident["FirstName"]}
+                              patronymic={resident["Patronymic"]}
+                              gender={resident["Gender"]}
+                              birthDate={resident["BirthDate"]}
+                              passportInformation={resident["PassportInformation"]}
+                              tin={resident["Tin"]}
+                              rating={resident["Rating"]}
+                              debt={resident["Debt"]}
+                              reports={resident["Reports"]}
                     />) : ''
                 }
                 <button className="add-resident-button"><img alt="plus" src={addButtonImg}/></button>
Index: DMS/ClientApp/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"dms\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"bootstrap\": \"^5.1.0\",\r\n    \"http-proxy-middleware\": \"^0.19.1\",\r\n    \"jquery\": \"^3.5.1\",\r\n    \"merge\": \"^2.1.1\",\r\n    \"oidc-client\": \"^1.11.5\",\r\n    \"process\": \"^0.11.10\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-router-dom\": \"^6.3.0\",\r\n    \"react-scripts\": \"^4.0.3\",\r\n    \"reactstrap\": \"^8.9.0\",\r\n    \"rimraf\": \"^2.6.2\",\r\n    \"web-vitals\": \"^0.2.4\",\r\n    \"workbox-background-sync\": \"^5.1.3\",\r\n    \"workbox-broadcast-update\": \"^5.1.3\",\r\n    \"workbox-cacheable-response\": \"^5.1.3\",\r\n    \"workbox-core\": \"^5.1.3\",\r\n    \"workbox-expiration\": \"^5.1.3\",\r\n    \"workbox-google-analytics\": \"^5.1.3\",\r\n    \"workbox-navigation-preload\": \"^5.1.3\",\r\n    \"workbox-precaching\": \"^5.1.3\",\r\n    \"workbox-range-requests\": \"^5.1.3\",\r\n    \"workbox-routing\": \"^5.1.3\",\r\n    \"workbox-strategies\": \"^5.1.3\",\r\n    \"workbox-streams\": \"^5.1.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"ajv\": \"^6.9.1\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"eslint\": \"^7.25.0\",\r\n    \"eslint-config-react-app\": \"^6.0.0\",\r\n    \"eslint-plugin-flowtype\": \"^5.7.2\",\r\n    \"eslint-plugin-import\": \"^2.22.1\",\r\n    \"eslint-plugin-jsx-a11y\": \"^6.4.1\",\r\n    \"eslint-plugin-react\": \"^7.23.2\",\r\n    \"nan\": \"^2.14.2\",\r\n    \"typescript\": \"^4.2.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"prestart\": \"node aspnetcore-https && node aspnetcore-react\",\r\n    \"start\": \"rimraf ./build && react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"cross-env CI=true react-scripts test --env=jsdom\",\r\n    \"eject\": \"react-scripts eject\",\r\n    \"lint\": \"eslint ./src/\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/package.json b/DMS/ClientApp/package.json
--- a/DMS/ClientApp/package.json	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/package.json	(date 1651779117493)
@@ -4,6 +4,8 @@
   "private": true,
   "dependencies": {
     "bootstrap": "^5.1.0",
+    "crypto": "^1.0.1",
+    "crypto-js": "^4.1.1",
     "http-proxy-middleware": "^0.19.1",
     "jquery": "^3.5.1",
     "merge": "^2.1.1",
Index: DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport template from \"./RoomsBlock.jsx\";\r\n\r\nclass RoomsBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            floors: [],\r\n            rooms: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.fetchFloors()\r\n            .then((data) => this.setState({floors: data}))\r\n    }\r\n\r\n    render() {\r\n        return template.call(this);\r\n    }\r\n\r\n    tabClick(e) {\r\n        try {\r\n            e.preventDefault();\r\n            try {\r\n                document.querySelector('.active').classList.remove('active');\r\n            }\r\n            catch (TypeError) {\r\n            }\r\n            document.getElementById(e.currentTarget.id).classList.add('active');\r\n        }\r\n        catch (TypeError) {\r\n        }\r\n        \r\n        this.fetchRooms(e.currentTarget.id)\r\n            .then((data) => this.setState({rooms: data}))\r\n    }\r\n    \r\n     async fetchFloors() {\r\n        const requestUrl = \"api/rooms/floors\";\r\n        const response = await fetch(requestUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\" : localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        const data = await response.json()\r\n        return data.value;\r\n    }\r\n    \r\n    async fetchRooms(floor) {\r\n        const requestUrl = \"api/rooms/floors/\" + floor\r\n        const response = await fetch(requestUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\" : localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        const data = await response.json()\r\n        return data.value;\r\n    }\r\n}\r\n\r\nexport default RoomsBlock;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js b/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js
--- a/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js	(date 1651766590219)
@@ -45,7 +45,7 @@
             }
         });
         const data = await response.json()
-        return data.value;
+        return data.Value;
     }
     
     async fetchRooms(floor) {
@@ -57,7 +57,7 @@
             }
         });
         const data = await response.json()
-        return data.value;
+        return data.Value;
     }
 }
 
Index: DMS/ClientApp/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/package-lock.json b/DMS/ClientApp/package-lock.json
--- a/DMS/ClientApp/package-lock.json	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/package-lock.json	(date 1651779117473)
@@ -9,6 +9,8 @@
       "version": "0.1.0",
       "dependencies": {
         "bootstrap": "^5.1.0",
+        "crypto": "^1.0.1",
+        "crypto-js": "^4.1.1",
         "http-proxy-middleware": "^0.19.1",
         "jquery": "^3.5.1",
         "merge": "^2.1.1",
@@ -5949,6 +5951,12 @@
         "node": ">= 8"
       }
     },
+    "node_modules/crypto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/crypto/-/crypto-1.0.1.tgz",
+      "integrity": "sha512-VxBKmeNcqQdiUQUW2Tzq0t377b54N2bMtXO/qiLa+6eRRmmC4qT3D4OnTGoT/U6O9aklQ/jTwbOtRMTTY8G0Ig==",
+      "deprecated": "This package is no longer supported. It's now a built-in Node module. If you've depended on crypto, you should switch to the one that's built-in."
+    },
     "node_modules/crypto-browserify": {
       "version": "3.12.0",
       "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
@@ -25755,6 +25763,11 @@
         "which": "^2.0.1"
       }
     },
+    "crypto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/crypto/-/crypto-1.0.1.tgz",
+      "integrity": "sha512-VxBKmeNcqQdiUQUW2Tzq0t377b54N2bMtXO/qiLa+6eRRmmC4qT3D4OnTGoT/U6O9aklQ/jTwbOtRMTTY8G0Ig=="
+    },
     "crypto-browserify": {
       "version": "3.12.0",
       "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
Index: .idea/.idea.DMS/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>DataManipulation/DataManipulation.csproj</projectFile>\r\n    <projectFile>DMS.csproj</projectFile>\r\n    <projectFile>DMS/DMS.csproj</projectFile>\r\n    <projectFile profileName=\"DMS\">DMS/DMS.csproj</projectFile>\r\n    <projectFile profileName=\"IIS Express\">DMS/DMS.csproj</projectFile>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5df6510b-7ccf-496e-989e-872805d77029\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.DMS/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.DMS/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/DMS/Controllers/RoomsController.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/DMS/Controllers/RoomsController.cs\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/DMS/Controllers/DocumentsController.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/DMS/Models/ApplicationContext.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/DMS/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"Toolset\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"28a24wI2liIL3U1zsEZRZuHflnd\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/home/wingim/RiderProjects/CSV&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;postgresql&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\".NET Launch Settings Profile.DMS\">\r\n    <configuration name=\"DataManipulation\" type=\"DotNetProject\" factoryName=\".NET Project\">\r\n      <option name=\"EXE_PATH\" value=\"\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/DataManipulation/DataManipulation.csproj\" />\r\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\r\n      <option name=\"PROJECT_TFM\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DMS\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/DMS/DMS.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"DMS\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DMS: IIS Express\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/DMS/DMS.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"IIS Express\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5df6510b-7ccf-496e-989e-872805d77029\" name=\"Changes\" comment=\"\" />\r\n      <created>1651440189802</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1651440189802</updated>\r\n      <workItem from=\"1651440193454\" duration=\"526000\" />\r\n      <workItem from=\"1651440767630\" duration=\"157000\" />\r\n      <workItem from=\"1651441256958\" duration=\"385000\" />\r\n      <workItem from=\"1651442963629\" duration=\"496000\" />\r\n      <workItem from=\"1651477689757\" duration=\"703000\" />\r\n      <workItem from=\"1651479421526\" duration=\"1697000\" />\r\n      <workItem from=\"1651482822313\" duration=\"1268000\" />\r\n      <workItem from=\"1651493356358\" duration=\"323000\" />\r\n      <workItem from=\"1651493691978\" duration=\"4756000\" />\r\n      <workItem from=\"1651511172362\" duration=\"3206000\" />\r\n      <workItem from=\"1651581419707\" duration=\"15633000\" />\r\n      <workItem from=\"1651641316548\" duration=\"3415000\" />\r\n      <workItem from=\"1651645790289\" duration=\"1841000\" />\r\n      <workItem from=\"1651690078179\" duration=\"6967000\" />\r\n      <workItem from=\"1651727991106\" duration=\"1124000\" />\r\n      <workItem from=\"1651755495624\" duration=\"6539000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Start making Documents (SettlementOrder, EvictionOrder, RatingOperation) resource and controller\">\r\n      <created>1651505569899</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651505569899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Data header processing in resident and room requests.&#10;Format files to wrap at 80 symbols\">\r\n      <created>1651645064854</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651645064854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Better date header processing in controllers and resources\">\r\n      <created>1651696194462</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651696194462</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Fix bug when RoomId became null after resident update request&#10;Change ResidentsController.cs PUT request route\">\r\n      <created>1651759876797</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651759876797</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"false\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"false\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"InjectingEFCore\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Start making Documents (SettlementOrder, EvictionOrder, RatingOperation) resource and controller\" />\r\n    <MESSAGE value=\"Data header processing in resident and room requests.&#10;Format files to wrap at 80 symbols\" />\r\n    <MESSAGE value=\"Better date header processing in controllers and resources\" />\r\n    <MESSAGE value=\"Fix bug when RoomId became null after resident update request&#10;Change ResidentsController.cs PUT request route\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fix bug when RoomId became null after resident update request&#10;Change ResidentsController.cs PUT request route\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.DMS/.idea/workspace.xml b/.idea/.idea.DMS/.idea/workspace.xml
--- a/.idea/.idea.DMS/.idea/workspace.xml	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/.idea/.idea.DMS/.idea/workspace.xml	(date 1651779697863)
@@ -1,16 +1,25 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="AutoGeneratedRunConfigurationManager">
-    <projectFile>DataManipulation/DataManipulation.csproj</projectFile>
     <projectFile>DMS.csproj</projectFile>
     <projectFile>DMS/DMS.csproj</projectFile>
+    <projectFile>DataManipulation/DataManipulation.csproj</projectFile>
     <projectFile profileName="DMS">DMS/DMS.csproj</projectFile>
     <projectFile profileName="IIS Express">DMS/DMS.csproj</projectFile>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5df6510b-7ccf-496e-989e-872805d77029" name="Changes" comment="">
+    <list default="true" id="296ce6c4-bfa7-4ba9-8b51-b5f486d838ab" name="Changes" comment="Update clientApp">
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.DMS/.idea/shelf/Uncommitted_changes_before_rebase__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.DMS/.idea/shelf/Uncommitted_changes_before_rebase__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.DMS/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.DMS/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/DMS/Controllers/RoomsController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/Controllers/RoomsController.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/package-lock.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/App.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/components/InRoomResidents/InRoomResidents.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/components/Login/Login.js" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/components/Login/Login.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/components/Resident/Resident.js" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/components/Resident/Resident.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/components/RoomsBlock/RoomsBlock.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DMS/obj/rider.project.restore.info" beforeDir="false" afterPath="$PROJECT_DIR$/DMS/obj/rider.project.restore.info" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -23,12 +32,17 @@
         <entry key="$PROJECT_DIR$" value="master" />
       </map>
     </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/DMS/ClientApp/package-lock.json" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/DMS/Controllers/DocumentsController.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/DMS/Models/ApplicationContext.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/DMS/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs" root0="SKIP_HIGHLIGHTING" />
   </component>
+  <component name="MacroExpansionManager">
+    <option name="directoryName" value="l6c9h4en" />
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -110,7 +124,7 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="5df6510b-7ccf-496e-989e-872805d77029" name="Changes" comment="" />
+      <changelist id="296ce6c4-bfa7-4ba9-8b51-b5f486d838ab" name="Changes" comment="Update clientApp" />
       <created>1651440189802</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -131,6 +145,7 @@
       <workItem from="1651690078179" duration="6967000" />
       <workItem from="1651727991106" duration="1124000" />
       <workItem from="1651755495624" duration="6539000" />
+      <workItem from="1651776092329" duration="3602000" />
     </task>
     <task id="LOCAL-00001" summary="Start making Documents (SettlementOrder, EvictionOrder, RatingOperation) resource and controller">
       <created>1651505569899</created>
Index: DMS/ClientApp/src/components/Resident/Resident.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport template from \"./Resident.jsx\";\r\n\r\nclass Resident extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitFail: false,\r\n            lastname: this.props.lastname,\r\n            firstName: this.props.firstName,\r\n            patronymic: this.props.patronymic,\r\n            gender: this.props.gender,\r\n            birthDate: this.props.birthDate,\r\n            passportInformation: this.props.passportInformation,\r\n            tin: this.props.tin,\r\n            rating: this.props.rating,\r\n            debt: this.props.debt,\r\n            reports: this.props.reports\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return template.call(this);\r\n    }\r\n\r\n    openCollapsible(e) {\r\n        let elem = e.currentTarget\r\n        elem.classList.toggle(\"active\");\r\n        let content = elem.nextElementSibling;\r\n        if (content.style.maxHeight) {\r\n            content.style.maxHeight = null;\r\n        } else {\r\n            content.style.maxHeight = content.scrollHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault()\r\n        \r\n        const data = {\r\n            LastName: this.state.lastname,\r\n            FirstName: this.state.firstName,\r\n            Patronymic: this.state.patronymic,\r\n            Gender: this.state.gender,\r\n            BirthDate: this.state.birthDate,\r\n            PassportInformation: this.state.passportInformation,\r\n            Tin: this.state.tin\r\n        }\r\n        const requestUrl = \"api/residents\"\r\n        const response = await fetch(requestUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                \"Content-Type\": 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        const json = await response.json();\r\n        console.log(json)\r\n    }\r\n}\r\n\r\nexport default Resident;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/components/Resident/Resident.js b/DMS/ClientApp/src/components/Resident/Resident.js
--- a/DMS/ClientApp/src/components/Resident/Resident.js	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/components/Resident/Resident.js	(date 1651766590238)
@@ -54,9 +54,9 @@
             PassportInformation: this.state.passportInformation,
             Tin: this.state.tin
         }
-        const requestUrl = "api/residents"
+        const requestUrl = "api/residents/" + this.props.id
         const response = await fetch(requestUrl, {
-            method: "POST",
+            method: "PUT",
             headers: {
                 "Authorization": localStorage.getItem("token"),
                 "Content-Type": 'application/json'
Index: DMS/obj/rider.project.restore.info
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>16516901814588515
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/obj/rider.project.restore.info b/DMS/obj/rider.project.restore.info
--- a/DMS/obj/rider.project.restore.info	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/obj/rider.project.restore.info	(date 1651766600721)
@@ -1,1 +1,1 @@
-16516901814588515
\ No newline at end of file
+16517656448947437
\ No newline at end of file
Index: DMS/ClientApp/src/components/Sidebar/Sidebar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import \"./Sidebar.css\";\r\nimport \"./progresscircle\"\r\nimport React from \"react\";\r\nimport './scripts'\r\n\r\nimport settingIco from './img/settingsIco.svg'\r\nimport wavesIco from './img/waves.svg'\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nfunction template() {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <a id=\"settings\" href=\"#settings\"><img alt=\"settings\"\r\n                                                   src={settingIco}/></a>\r\n            <span id=\"sidebar-header\">DMS</span>\r\n\r\n            <div className=\"stats-block\">\r\n                <span id=\"stats-header\">ЧИСЛО ЖИЛЬЦОВ</span> <br/>\r\n\r\n                <div className=\"stats-intel-block\">\r\n                    <div className=\"stats-intel\">\r\n                        <span className=\"marked-span filled\">занято</span><br/>\r\n                        <span className=\"relative-span\">304</span><br/>\r\n                        <span className=\"marked-span unfilled\">свободно</span><br/>\r\n                        <span className=\"relative-span\">93</span><br/>\r\n                    </div>\r\n                    <div className=\"circlechart\"\r\n                         data-percentage=\"78\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar-btn-block\">\r\n                <a id=\"rooms\" onClick={this.props.showRooms}\r\n                   className=\"sidebar-btn\" href=\"#rooms\">\r\n                    Комнаты\r\n                </a>\r\n                <a id=\"residents\"\r\n                   className=\"sidebar-btn\" href=\"#residents\">\r\n                    Проживающие\r\n                </a>\r\n                <a id=\"documents\"\r\n                   className=\"sidebar-btn\" href=\"#documents\">\r\n                    Документы\r\n                </a>\r\n            </div>\r\n\r\n            <img id=\"waves\" src={wavesIco} alt=\"waves\"/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default template;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx b/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx
--- a/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/components/Sidebar/Sidebar.jsx	(date 1651776289848)
@@ -39,7 +39,7 @@
                     Комнаты
                 </a>
                 <a id="residents"
-                   className="sidebar-btn" href="#residents">
+                   className="sidebar-btn" onClick={this.props.showResidents} href="#residents">
                     Проживающие
                 </a>
                 <a id="documents"
Index: DMS/ClientApp/src/components/Login/Login.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from \"react\";\r\nimport template from \"./Login.jsx\";\r\nimport {Redirect, Navigate} from \"react-router-dom\";\r\n\r\nexport class Login extends Component {\r\n    static displayName = Login.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            isVisible: false\r\n        }\r\n    }\r\n\r\n    loginHandler = async e => {\r\n        console.log(123);\r\n        e.preventDefault();\r\n        await fetch(\"/api/login\", {\r\n            method: \"POST\", \r\n            headers: {\"password\": e},\r\n        }).then(async resp => {\r\n            let responseJson = await resp.json();\r\n            if (resp.status === 200) {\r\n                localStorage.setItem(\"token\", \"Bearer \" + responseJson[\"value\"][\"access_token\"]);\r\n                window.location = \"/\"\r\n            } else {\r\n                this.setState({isVisible: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.getItem(\"token\") !== null) {\r\n            return <Navigate to=\"/\" replace />\r\n        }\r\n        \r\n        return template.call(this);\r\n    }\r\n}\r\nexport default Login;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DMS/ClientApp/src/components/Login/Login.js b/DMS/ClientApp/src/components/Login/Login.js
--- a/DMS/ClientApp/src/components/Login/Login.js	(revision 8ad594ca2f83f9fd37c5441b1b5c15e69dec3fab)
+++ b/DMS/ClientApp/src/components/Login/Login.js	(date 1651776048462)
@@ -14,15 +14,15 @@
     }
 
     loginHandler = async e => {
-        console.log(123);
         e.preventDefault();
         await fetch("/api/login", {
-            method: "POST", 
-            headers: {"password": e},
+            method: "POST",
+            headers: {"password": this.state.password},
         }).then(async resp => {
             let responseJson = await resp.json();
             if (resp.status === 200) {
-                localStorage.setItem("token", "Bearer " + responseJson["value"]["access_token"]);
+                localStorage.setItem("password", this.state.password);
+                localStorage.setItem("token", "Bearer " + responseJson["Value"]["AccessToken"]);
                 window.location = "/"
             } else {
                 this.setState({isVisible: true})
